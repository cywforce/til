// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gqlgen-proto/options.proto

package gqlgen_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MessageType int32

const (
	MessageType_UNKNOWN MessageType = 0
	MessageType_TYPE    MessageType = 1
	MessageType_INPUT   MessageType = 2
)

var MessageType_name = map[int32]string{
	0: "UNKNOWN",
	1: "TYPE",
	2: "INPUT",
}

var MessageType_value = map[string]int32{
	"UNKNOWN": 0,
	"TYPE":    1,
	"INPUT":   2,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_03469d44191f4235, []int{0}
}

type FileRule struct {
	TypeInference        []*InferrenceRule `protobuf:"bytes,1,rep,name=type_inference,json=typeInference,proto3" json:"type_inference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FileRule) Reset()         { *m = FileRule{} }
func (m *FileRule) String() string { return proto.CompactTextString(m) }
func (*FileRule) ProtoMessage()    {}
func (*FileRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_03469d44191f4235, []int{0}
}

func (m *FileRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileRule.Unmarshal(m, b)
}
func (m *FileRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileRule.Marshal(b, m, deterministic)
}
func (m *FileRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileRule.Merge(m, src)
}
func (m *FileRule) XXX_Size() int {
	return xxx_messageInfo_FileRule.Size(m)
}
func (m *FileRule) XXX_DiscardUnknown() {
	xxx_messageInfo_FileRule.DiscardUnknown(m)
}

var xxx_messageInfo_FileRule proto.InternalMessageInfo

func (m *FileRule) GetTypeInference() []*InferrenceRule {
	if m != nil {
		return m.TypeInference
	}
	return nil
}

type InferrenceRule struct {
	Src                  string      `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dest                 string      `protobuf:"bytes,2,opt,name=dest,proto3" json:"dest,omitempty"`
	Type                 MessageType `protobuf:"varint,3,opt,name=type,proto3,enum=gqlgen.api.MessageType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *InferrenceRule) Reset()         { *m = InferrenceRule{} }
func (m *InferrenceRule) String() string { return proto.CompactTextString(m) }
func (*InferrenceRule) ProtoMessage()    {}
func (*InferrenceRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_03469d44191f4235, []int{1}
}

func (m *InferrenceRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InferrenceRule.Unmarshal(m, b)
}
func (m *InferrenceRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InferrenceRule.Marshal(b, m, deterministic)
}
func (m *InferrenceRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InferrenceRule.Merge(m, src)
}
func (m *InferrenceRule) XXX_Size() int {
	return xxx_messageInfo_InferrenceRule.Size(m)
}
func (m *InferrenceRule) XXX_DiscardUnknown() {
	xxx_messageInfo_InferrenceRule.DiscardUnknown(m)
}

var xxx_messageInfo_InferrenceRule proto.InternalMessageInfo

func (m *InferrenceRule) GetSrc() string {
	if m != nil {
		return m.Src
	}
	return ""
}

func (m *InferrenceRule) GetDest() string {
	if m != nil {
		return m.Dest
	}
	return ""
}

func (m *InferrenceRule) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MessageType_UNKNOWN
}

type SchemaRule struct {
	// Types that are valid to be assigned to Pattern:
	//	*SchemaRule_Query
	//	*SchemaRule_Mutation
	//	*SchemaRule_Subscription
	Pattern              isSchemaRule_Pattern `protobuf_oneof:"pattern"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SchemaRule) Reset()         { *m = SchemaRule{} }
func (m *SchemaRule) String() string { return proto.CompactTextString(m) }
func (*SchemaRule) ProtoMessage()    {}
func (*SchemaRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_03469d44191f4235, []int{2}
}

func (m *SchemaRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchemaRule.Unmarshal(m, b)
}
func (m *SchemaRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchemaRule.Marshal(b, m, deterministic)
}
func (m *SchemaRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchemaRule.Merge(m, src)
}
func (m *SchemaRule) XXX_Size() int {
	return xxx_messageInfo_SchemaRule.Size(m)
}
func (m *SchemaRule) XXX_DiscardUnknown() {
	xxx_messageInfo_SchemaRule.DiscardUnknown(m)
}

var xxx_messageInfo_SchemaRule proto.InternalMessageInfo

type isSchemaRule_Pattern interface {
	isSchemaRule_Pattern()
}

type SchemaRule_Query struct {
	Query string `protobuf:"bytes,1,opt,name=query,proto3,oneof"`
}

type SchemaRule_Mutation struct {
	Mutation string `protobuf:"bytes,2,opt,name=mutation,proto3,oneof"`
}

type SchemaRule_Subscription struct {
	Subscription string `protobuf:"bytes,3,opt,name=subscription,proto3,oneof"`
}

func (*SchemaRule_Query) isSchemaRule_Pattern() {}

func (*SchemaRule_Mutation) isSchemaRule_Pattern() {}

func (*SchemaRule_Subscription) isSchemaRule_Pattern() {}

func (m *SchemaRule) GetPattern() isSchemaRule_Pattern {
	if m != nil {
		return m.Pattern
	}
	return nil
}

func (m *SchemaRule) GetQuery() string {
	if x, ok := m.GetPattern().(*SchemaRule_Query); ok {
		return x.Query
	}
	return ""
}

func (m *SchemaRule) GetMutation() string {
	if x, ok := m.GetPattern().(*SchemaRule_Mutation); ok {
		return x.Mutation
	}
	return ""
}

func (m *SchemaRule) GetSubscription() string {
	if x, ok := m.GetPattern().(*SchemaRule_Subscription); ok {
		return x.Subscription
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SchemaRule) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SchemaRule_Query)(nil),
		(*SchemaRule_Mutation)(nil),
		(*SchemaRule_Subscription)(nil),
	}
}

type MessageRule struct {
	Alias                string      `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	Type                 MessageType `protobuf:"varint,2,opt,name=type,proto3,enum=gqlgen.api.MessageType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MessageRule) Reset()         { *m = MessageRule{} }
func (m *MessageRule) String() string { return proto.CompactTextString(m) }
func (*MessageRule) ProtoMessage()    {}
func (*MessageRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_03469d44191f4235, []int{3}
}

func (m *MessageRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageRule.Unmarshal(m, b)
}
func (m *MessageRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageRule.Marshal(b, m, deterministic)
}
func (m *MessageRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageRule.Merge(m, src)
}
func (m *MessageRule) XXX_Size() int {
	return xxx_messageInfo_MessageRule.Size(m)
}
func (m *MessageRule) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageRule.DiscardUnknown(m)
}

var xxx_messageInfo_MessageRule proto.InternalMessageInfo

func (m *MessageRule) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *MessageRule) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MessageType_UNKNOWN
}

type FieldRule struct {
	Alias                string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	Optional             bool     `protobuf:"varint,2,opt,name=optional,proto3" json:"optional,omitempty"`
	Id                   bool     `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldRule) Reset()         { *m = FieldRule{} }
func (m *FieldRule) String() string { return proto.CompactTextString(m) }
func (*FieldRule) ProtoMessage()    {}
func (*FieldRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_03469d44191f4235, []int{4}
}

func (m *FieldRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldRule.Unmarshal(m, b)
}
func (m *FieldRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldRule.Marshal(b, m, deterministic)
}
func (m *FieldRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldRule.Merge(m, src)
}
func (m *FieldRule) XXX_Size() int {
	return xxx_messageInfo_FieldRule.Size(m)
}
func (m *FieldRule) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldRule.DiscardUnknown(m)
}

var xxx_messageInfo_FieldRule proto.InternalMessageInfo

func (m *FieldRule) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *FieldRule) GetOptional() bool {
	if m != nil {
		return m.Optional
	}
	return false
}

func (m *FieldRule) GetId() bool {
	if m != nil {
		return m.Id
	}
	return false
}

var E_Resolver = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FileOptions)(nil),
	ExtensionType: (*FileRule)(nil),
	Field:         50000,
	Name:          "gqlgen.api.resolver",
	Tag:           "bytes,50000,opt,name=resolver",
	Filename:      "gqlgen-proto/options.proto",
}

var E_Schema = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*SchemaRule)(nil),
	Field:         50001,
	Name:          "gqlgen.api.schema",
	Tag:           "bytes,50001,opt,name=schema",
	Filename:      "gqlgen-proto/options.proto",
}

var E_Type = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*MessageRule)(nil),
	Field:         50002,
	Name:          "gqlgen.api.type",
	Tag:           "bytes,50002,opt,name=type",
	Filename:      "gqlgen-proto/options.proto",
}

var E_Field = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*FieldRule)(nil),
	Field:         50003,
	Name:          "gqlgen.api.field",
	Tag:           "bytes,50003,opt,name=field",
	Filename:      "gqlgen-proto/options.proto",
}

func init() {
	proto.RegisterEnum("gqlgen.api.MessageType", MessageType_name, MessageType_value)
	proto.RegisterType((*FileRule)(nil), "gqlgen.api.FileRule")
	proto.RegisterType((*InferrenceRule)(nil), "gqlgen.api.InferrenceRule")
	proto.RegisterType((*SchemaRule)(nil), "gqlgen.api.SchemaRule")
	proto.RegisterType((*MessageRule)(nil), "gqlgen.api.MessageRule")
	proto.RegisterType((*FieldRule)(nil), "gqlgen.api.FieldRule")
	proto.RegisterExtension(E_Resolver)
	proto.RegisterExtension(E_Schema)
	proto.RegisterExtension(E_Type)
	proto.RegisterExtension(E_Field)
}

func init() { proto.RegisterFile("gqlgen-proto/options.proto", fileDescriptor_03469d44191f4235) }

var fileDescriptor_03469d44191f4235 = []byte{
	// 517 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xdd, 0x6e, 0x12, 0x41,
	0x14, 0xc7, 0xf9, 0x6c, 0x97, 0x83, 0x12, 0x32, 0xa9, 0x95, 0x90, 0xaa, 0x84, 0x78, 0x41, 0x34,
	0xdd, 0x4d, 0xf0, 0x0e, 0xaf, 0x5a, 0x63, 0x53, 0xa2, 0x50, 0x32, 0xd2, 0x18, 0xbd, 0x69, 0x96,
	0xdd, 0xc3, 0x32, 0x71, 0x61, 0xb6, 0x33, 0xb3, 0x24, 0xbc, 0x80, 0xcf, 0xe7, 0xc7, 0x0b, 0x99,
	0x99, 0x59, 0xb6, 0x10, 0x89, 0xf1, 0x06, 0xe6, 0xcc, 0x9c, 0xf3, 0xfb, 0x9f, 0xaf, 0x85, 0x76,
	0x74, 0x1f, 0x47, 0xb8, 0x3a, 0x4f, 0x04, 0x57, 0xdc, 0xe3, 0x89, 0x62, 0x7c, 0x25, 0x5d, 0x63,
	0x11, 0xb0, 0x6f, 0xae, 0x9f, 0xb0, 0x76, 0x27, 0xe2, 0x3c, 0x8a, 0xd1, 0x33, 0x2f, 0xb3, 0x74,
	0xee, 0x85, 0x28, 0x03, 0xc1, 0x12, 0xc5, 0x85, 0xf5, 0xee, 0x8e, 0xc0, 0xb9, 0x62, 0x31, 0xd2,
	0x34, 0x46, 0x72, 0x01, 0x0d, 0xb5, 0x49, 0xf0, 0x8e, 0xad, 0xe6, 0x28, 0x70, 0x15, 0x60, 0xab,
	0xd8, 0x29, 0xf7, 0xea, 0xfd, 0xb6, 0xfb, 0x80, 0x74, 0x87, 0xfa, 0xd1, 0xbc, 0xea, 0x18, 0xfa,
	0x58, 0x47, 0x0c, 0xb7, 0x01, 0xdd, 0x00, 0x1a, 0xfb, 0x0e, 0xa4, 0x09, 0x65, 0x29, 0x82, 0x56,
	0xb1, 0x53, 0xec, 0xd5, 0xa8, 0x3e, 0x12, 0x02, 0x95, 0x10, 0xa5, 0x6a, 0x95, 0xcc, 0x95, 0x39,
	0x93, 0xd7, 0x50, 0xd1, 0xa0, 0x56, 0xb9, 0x53, 0xec, 0x35, 0xfa, 0x4f, 0x77, 0x05, 0x47, 0x28,
	0xa5, 0x1f, 0xe1, 0x74, 0x93, 0x20, 0x35, 0x4e, 0x5d, 0x09, 0xf0, 0x29, 0x58, 0xe0, 0xd2, 0x37,
	0x02, 0xa7, 0x50, 0xbd, 0x4f, 0x51, 0x6c, 0xac, 0xc4, 0x75, 0x81, 0x5a, 0x93, 0x9c, 0x81, 0xb3,
	0x4c, 0x95, 0xaf, 0x5b, 0x63, 0xa5, 0xae, 0x0b, 0x34, 0xbf, 0x21, 0x2f, 0xe1, 0x91, 0x4c, 0x67,
	0xb6, 0x19, 0xda, 0xa3, 0x9c, 0x79, 0xec, 0xdd, 0x5e, 0xd6, 0xe0, 0x38, 0xf1, 0x95, 0x42, 0xb1,
	0xea, 0x4e, 0xa0, 0x9e, 0x65, 0x62, 0x54, 0x4f, 0xa0, 0xea, 0xc7, 0xcc, 0x97, 0x59, 0x61, 0xd6,
	0xc8, 0xcb, 0x28, 0xfd, 0x4f, 0x19, 0x23, 0xa8, 0x5d, 0x31, 0x8c, 0xc3, 0x7f, 0xf0, 0xda, 0xe0,
	0xd8, 0xe1, 0xfa, 0xb1, 0x61, 0x3a, 0x34, 0xb7, 0x49, 0x03, 0x4a, 0x2c, 0x34, 0x79, 0x3b, 0xb4,
	0xc4, 0xc2, 0x57, 0x5e, 0x9e, 0xa0, 0xd6, 0x20, 0x75, 0x38, 0xbe, 0x1d, 0x7f, 0x18, 0xdf, 0x7c,
	0x1e, 0x37, 0x0b, 0xc4, 0x81, 0xca, 0xf4, 0xcb, 0xe4, 0x7d, 0xb3, 0x48, 0x6a, 0x50, 0x1d, 0x8e,
	0x27, 0xb7, 0xd3, 0x66, 0x69, 0x30, 0x01, 0x47, 0xa0, 0xe4, 0xf1, 0x1a, 0x05, 0x39, 0x73, 0xed,
	0xa6, 0xb8, 0xdb, 0x4d, 0x71, 0xf5, 0x56, 0xdc, 0xd8, 0xc5, 0x6a, 0xfd, 0xf8, 0xae, 0x65, 0xea,
	0xfd, 0x93, 0xdd, 0x82, 0xb6, 0x6b, 0x43, 0x73, 0xca, 0x60, 0x02, 0x47, 0xd2, 0x0c, 0x86, 0x3c,
	0xff, 0x8b, 0x37, 0x42, 0xb5, 0xe0, 0xe1, 0x96, 0xf8, 0x33, 0x23, 0x9e, 0xee, 0x12, 0x1f, 0x86,
	0x4a, 0x33, 0xce, 0x60, 0x6c, 0x1b, 0x4a, 0x5e, 0x1c, 0xe0, 0x99, 0x5a, 0xb7, 0xc0, 0x5f, 0x19,
	0xf0, 0x50, 0xcf, 0x0d, 0xd1, 0x70, 0x06, 0x1f, 0xa1, 0x3a, 0xd7, 0x3d, 0x27, 0xcf, 0x0e, 0x14,
	0x8c, 0x71, 0x9e, 0xdf, 0xef, 0x0c, 0xf7, 0x64, 0xbf, 0xe2, 0x6c, 0x5a, 0xd4, 0x42, 0x2e, 0xdf,
	0x7d, 0xbd, 0x88, 0x98, 0x5a, 0xa4, 0x33, 0x37, 0xe0, 0x4b, 0x6f, 0xbd, 0xf6, 0xbf, 0xf9, 0x4b,
	0xf4, 0x14, 0x8b, 0xbd, 0x48, 0x24, 0x81, 0xf9, 0x39, 0xb7, 0xf1, 0xde, 0xee, 0x07, 0xfb, 0xd6,
	0x1a, 0x77, 0x56, 0xfa, 0xc8, 0xfc, 0xbd, 0xf9, 0x13, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x20, 0xe7,
	0x0f, 0xd4, 0x03, 0x00, 0x00,
}
