// Code generated by protoc-gen-go. DO NOT EDIT.
// source: echo.proto

package echopb

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/vvakame/til/grpc/grpc-gqlgen/gqlgen-proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SayRequest struct {
	MessageId            string   `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	MessageBody          string   `protobuf:"bytes,2,opt,name=message_body,json=messageBody,proto3" json:"message_body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SayRequest) Reset()         { *m = SayRequest{} }
func (m *SayRequest) String() string { return proto.CompactTextString(m) }
func (*SayRequest) ProtoMessage()    {}
func (*SayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_08134aea513e0001, []int{0}
}

func (m *SayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayRequest.Unmarshal(m, b)
}
func (m *SayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayRequest.Marshal(b, m, deterministic)
}
func (m *SayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayRequest.Merge(m, src)
}
func (m *SayRequest) XXX_Size() int {
	return xxx_messageInfo_SayRequest.Size(m)
}
func (m *SayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SayRequest proto.InternalMessageInfo

func (m *SayRequest) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *SayRequest) GetMessageBody() string {
	if m != nil {
		return m.MessageBody
	}
	return ""
}

type SayResponse struct {
	MessageId            string               `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	MessageBody          string               `protobuf:"bytes,2,opt,name=message_body,json=messageBody,proto3" json:"message_body,omitempty"`
	Received             *timestamp.Timestamp `protobuf:"bytes,3,opt,name=received,proto3" json:"received,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SayResponse) Reset()         { *m = SayResponse{} }
func (m *SayResponse) String() string { return proto.CompactTextString(m) }
func (*SayResponse) ProtoMessage()    {}
func (*SayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_08134aea513e0001, []int{1}
}

func (m *SayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayResponse.Unmarshal(m, b)
}
func (m *SayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayResponse.Marshal(b, m, deterministic)
}
func (m *SayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayResponse.Merge(m, src)
}
func (m *SayResponse) XXX_Size() int {
	return xxx_messageInfo_SayResponse.Size(m)
}
func (m *SayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SayResponse proto.InternalMessageInfo

func (m *SayResponse) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *SayResponse) GetMessageBody() string {
	if m != nil {
		return m.MessageBody
	}
	return ""
}

func (m *SayResponse) GetReceived() *timestamp.Timestamp {
	if m != nil {
		return m.Received
	}
	return nil
}

type Example1 struct {
	Foo                  *Example1_InMessage `protobuf:"bytes,1,opt,name=foo,proto3" json:"foo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Example1) Reset()         { *m = Example1{} }
func (m *Example1) String() string { return proto.CompactTextString(m) }
func (*Example1) ProtoMessage()    {}
func (*Example1) Descriptor() ([]byte, []int) {
	return fileDescriptor_08134aea513e0001, []int{2}
}

func (m *Example1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Example1.Unmarshal(m, b)
}
func (m *Example1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Example1.Marshal(b, m, deterministic)
}
func (m *Example1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Example1.Merge(m, src)
}
func (m *Example1) XXX_Size() int {
	return xxx_messageInfo_Example1.Size(m)
}
func (m *Example1) XXX_DiscardUnknown() {
	xxx_messageInfo_Example1.DiscardUnknown(m)
}

var xxx_messageInfo_Example1 proto.InternalMessageInfo

func (m *Example1) GetFoo() *Example1_InMessage {
	if m != nil {
		return m.Foo
	}
	return nil
}

type Example1_InMessage struct {
	Bar                  string   `protobuf:"bytes,1,opt,name=bar,proto3" json:"bar,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Example1_InMessage) Reset()         { *m = Example1_InMessage{} }
func (m *Example1_InMessage) String() string { return proto.CompactTextString(m) }
func (*Example1_InMessage) ProtoMessage()    {}
func (*Example1_InMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_08134aea513e0001, []int{2, 0}
}

func (m *Example1_InMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Example1_InMessage.Unmarshal(m, b)
}
func (m *Example1_InMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Example1_InMessage.Marshal(b, m, deterministic)
}
func (m *Example1_InMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Example1_InMessage.Merge(m, src)
}
func (m *Example1_InMessage) XXX_Size() int {
	return xxx_messageInfo_Example1_InMessage.Size(m)
}
func (m *Example1_InMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_Example1_InMessage.DiscardUnknown(m)
}

var xxx_messageInfo_Example1_InMessage proto.InternalMessageInfo

func (m *Example1_InMessage) GetBar() string {
	if m != nil {
		return m.Bar
	}
	return ""
}

type Example2 struct {
	Hoge                 *Example2_InMessage `protobuf:"bytes,1,opt,name=hoge,proto3" json:"hoge,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Example2) Reset()         { *m = Example2{} }
func (m *Example2) String() string { return proto.CompactTextString(m) }
func (*Example2) ProtoMessage()    {}
func (*Example2) Descriptor() ([]byte, []int) {
	return fileDescriptor_08134aea513e0001, []int{3}
}

func (m *Example2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Example2.Unmarshal(m, b)
}
func (m *Example2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Example2.Marshal(b, m, deterministic)
}
func (m *Example2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Example2.Merge(m, src)
}
func (m *Example2) XXX_Size() int {
	return xxx_messageInfo_Example2.Size(m)
}
func (m *Example2) XXX_DiscardUnknown() {
	xxx_messageInfo_Example2.DiscardUnknown(m)
}

var xxx_messageInfo_Example2 proto.InternalMessageInfo

func (m *Example2) GetHoge() *Example2_InMessage {
	if m != nil {
		return m.Hoge
	}
	return nil
}

type Example2_InMessage struct {
	Fuga                 string   `protobuf:"bytes,1,opt,name=fuga,proto3" json:"fuga,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Example2_InMessage) Reset()         { *m = Example2_InMessage{} }
func (m *Example2_InMessage) String() string { return proto.CompactTextString(m) }
func (*Example2_InMessage) ProtoMessage()    {}
func (*Example2_InMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_08134aea513e0001, []int{3, 0}
}

func (m *Example2_InMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Example2_InMessage.Unmarshal(m, b)
}
func (m *Example2_InMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Example2_InMessage.Marshal(b, m, deterministic)
}
func (m *Example2_InMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Example2_InMessage.Merge(m, src)
}
func (m *Example2_InMessage) XXX_Size() int {
	return xxx_messageInfo_Example2_InMessage.Size(m)
}
func (m *Example2_InMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_Example2_InMessage.DiscardUnknown(m)
}

var xxx_messageInfo_Example2_InMessage proto.InternalMessageInfo

func (m *Example2_InMessage) GetFuga() string {
	if m != nil {
		return m.Fuga
	}
	return ""
}

func init() {
	proto.RegisterType((*SayRequest)(nil), "echo.SayRequest")
	proto.RegisterType((*SayResponse)(nil), "echo.SayResponse")
	proto.RegisterType((*Example1)(nil), "echo.Example1")
	proto.RegisterType((*Example1_InMessage)(nil), "echo.Example1.InMessage")
	proto.RegisterType((*Example2)(nil), "echo.Example2")
	proto.RegisterType((*Example2_InMessage)(nil), "echo.Example2.InMessage")
}

func init() { proto.RegisterFile("echo.proto", fileDescriptor_08134aea513e0001) }

var fileDescriptor_08134aea513e0001 = []byte{
	// 491 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0xcf, 0xaa, 0xd3, 0x40,
	0x14, 0xc6, 0x49, 0x53, 0xb5, 0x3d, 0xad, 0x92, 0x8e, 0x82, 0x43, 0x50, 0xac, 0xa1, 0x8b, 0x5a,
	0xbc, 0x19, 0x1a, 0xe1, 0x2a, 0x75, 0x57, 0xb8, 0x8b, 0x82, 0x17, 0x24, 0xbd, 0x2b, 0x17, 0xca,
	0x24, 0x99, 0xa6, 0xc1, 0x24, 0x93, 0x9b, 0x4c, 0x8a, 0x71, 0x79, 0x97, 0x2e, 0xeb, 0xce, 0xd7,
	0x90, 0x3c, 0x89, 0xaf, 0xe0, 0x83, 0x48, 0x26, 0x7f, 0x2c, 0xe2, 0xf6, 0x6e, 0xc2, 0xcc, 0x39,
	0xdf, 0x99, 0xdf, 0xc9, 0x77, 0x0e, 0x00, 0x73, 0xf7, 0xdc, 0x4c, 0x52, 0x2e, 0x38, 0xea, 0x57,
	0x67, 0xfd, 0x89, 0xcf, 0xb9, 0x1f, 0x32, 0x42, 0x93, 0x80, 0xd0, 0x38, 0xe6, 0x82, 0x8a, 0x80,
	0xc7, 0x59, 0xad, 0xd1, 0x9f, 0x35, 0x59, 0x79, 0x73, 0xf2, 0x1d, 0x11, 0x41, 0xc4, 0x32, 0x41,
	0xa3, 0xa4, 0x11, 0xe8, 0xfe, 0x75, 0xe8, 0xb3, 0xf8, 0x4c, 0xde, 0x08, 0x4f, 0x4e, 0x8a, 0x8d,
	0xaf, 0x00, 0x5b, 0x5a, 0xd8, 0xec, 0x3a, 0x67, 0x99, 0x40, 0xaf, 0x01, 0x22, 0x96, 0x65, 0xd4,
	0x67, 0x9f, 0x02, 0x0f, 0x2b, 0x53, 0x65, 0x3e, 0x5c, 0xe3, 0x1f, 0x25, 0x7e, 0x04, 0x9a, 0x1b,
	0x06, 0x2c, 0x16, 0x97, 0x79, 0xcd, 0xde, 0x78, 0x9a, 0x62, 0x0f, 0x1b, 0xed, 0xc6, 0x43, 0xcf,
	0x61, 0xdc, 0x16, 0x3a, 0xdc, 0x2b, 0x70, 0xaf, 0x2a, 0xb5, 0x47, 0x4d, 0x6c, 0xcd, 0xbd, 0x62,
	0xa5, 0x1d, 0x4b, 0x3c, 0x86, 0xc1, 0x96, 0x16, 0x9b, 0x38, 0xc9, 0x85, 0xd6, 0x33, 0x7e, 0x2a,
	0x30, 0x92, 0xf0, 0x2c, 0xe1, 0x71, 0xc6, 0x6e, 0x93, 0x8e, 0xce, 0x61, 0x90, 0x32, 0x97, 0x05,
	0x07, 0xe6, 0x61, 0x75, 0xaa, 0xcc, 0x47, 0x96, 0x6e, 0xd6, 0xbe, 0x99, 0xad, 0x6f, 0xe6, 0x55,
	0xeb, 0x9b, 0xdd, 0x69, 0x9b, 0xae, 0x2b, 0x8f, 0xde, 0xd3, 0x22, 0xe4, 0xd4, 0x33, 0x62, 0x18,
	0x5c, 0x7c, 0xa1, 0x51, 0x12, 0xb2, 0x25, 0x5a, 0x80, 0xba, 0xe3, 0x5c, 0xb6, 0x3a, 0xb2, 0xb0,
	0x29, 0x07, 0xd7, 0x26, 0xcd, 0x4d, 0x7c, 0x59, 0x37, 0x60, 0x57, 0x22, 0xfd, 0x1c, 0x86, 0x5d,
	0x04, 0x69, 0xa0, 0x3a, 0x34, 0xad, 0xff, 0xd1, 0xae, 0x8e, 0xab, 0xc7, 0xc7, 0x12, 0x3f, 0x84,
	0x49, 0x5b, 0xdd, 0x49, 0x8d, 0xb4, 0xe3, 0x59, 0xe8, 0x25, 0xf4, 0xf7, 0xdc, 0x67, 0xff, 0x05,
	0x5a, 0x27, 0x40, 0xa9, 0xd2, 0xdf, 0x9c, 0x12, 0x11, 0xf4, 0x77, 0xb9, 0x4f, 0x1b, 0xa4, 0x3c,
	0xff, 0xc3, 0xb4, 0x3a, 0xb1, 0x75, 0x05, 0xfd, 0x0b, 0x77, 0xcf, 0xd1, 0x3b, 0x50, 0xb7, 0xb4,
	0x40, 0x5a, 0x0d, 0xfa, 0xbb, 0x28, 0xfa, 0xe4, 0x24, 0x52, 0x4f, 0xcf, 0x98, 0x7e, 0x2b, 0xf1,
	0x1d, 0xa4, 0x66, 0xb4, 0xb8, 0xf9, 0xf5, 0xfb, 0x7b, 0x6f, 0x62, 0x8c, 0xc9, 0x61, 0x49, 0x2a,
	0x19, 0xc9, 0x68, 0xb1, 0x52, 0x16, 0x6b, 0x7e, 0x53, 0xe2, 0xb7, 0xa0, 0xc3, 0xfd, 0x8f, 0x73,
	0x73, 0xf1, 0xa2, 0x79, 0x6a, 0x86, 0xee, 0xcd, 0x96, 0x72, 0x23, 0x70, 0x0f, 0x9e, 0xc2, 0x83,
	0x26, 0x57, 0x3f, 0x3a, 0x43, 0xc3, 0xd9, 0xb2, 0x31, 0x1e, 0x2b, 0x1f, 0x4c, 0x3f, 0x10, 0xfb,
	0xdc, 0x31, 0x5d, 0x1e, 0x91, 0xc3, 0x81, 0x7e, 0xa6, 0x11, 0x23, 0x22, 0x08, 0x89, 0x9f, 0x26,
	0xae, 0xfc, 0x9c, 0xd5, 0x9b, 0x2e, 0xa9, 0x89, 0xe3, 0xdc, 0x95, 0xa3, 0x7d, 0xf5, 0x27, 0x00,
	0x00, 0xff, 0xff, 0x71, 0x20, 0x2a, 0x97, 0x52, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EchoClient is the client API for Echo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EchoClient interface {
	Say(ctx context.Context, in *SayRequest, opts ...grpc.CallOption) (*SayResponse, error)
}

type echoClient struct {
	cc *grpc.ClientConn
}

func NewEchoClient(cc *grpc.ClientConn) EchoClient {
	return &echoClient{cc}
}

func (c *echoClient) Say(ctx context.Context, in *SayRequest, opts ...grpc.CallOption) (*SayResponse, error) {
	out := new(SayResponse)
	err := c.cc.Invoke(ctx, "/echo.Echo/Say", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EchoServer is the server API for Echo service.
type EchoServer interface {
	Say(context.Context, *SayRequest) (*SayResponse, error)
}

func RegisterEchoServer(s *grpc.Server, srv EchoServer) {
	s.RegisterService(&_Echo_serviceDesc, srv)
}

func _Echo_Say_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EchoServer).Say(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/echo.Echo/Say",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EchoServer).Say(ctx, req.(*SayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Echo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "echo.Echo",
	HandlerType: (*EchoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Say",
			Handler:    _Echo_Say_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "echo.proto",
}
